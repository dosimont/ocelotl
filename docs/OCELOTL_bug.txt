We are looking at the trace of a decoding video application which has some performance issues. We know that the issue comes from a process that writes to a USB drive the decoded video stream.

With Ocelotl, there are two ways to visualize the perturbations coming from the USB-writing process:

=========================================
Using the Statistic Pie Chart and Ocelotl
=========================================

	1. In order to perform a first filtering of the events, we start by looking at the Statistic Pie Chart of the event producers, to get the producers generating the most events and filter them out of the analysis performed by Ocelotl. We remove the 3 producers that generates 75 % of the events: SoftIRQ (net_rx_action), Interrupt 168 and Idle.

	2. Then in the Ocelotl tab tool, select the ts_record trace in the trace selection interface. 

	3. Select "Event distribution" as Microscopic Description. In the pop up "Settings" window, select the event producer tabs, choose "Reset" to remove all producers, then "Add" and select all the producers but the three we filtered out earlier (the easiest way to do this is to select all producers (ctrl+a), then unselect only (by pressing ctrl) the three unwanted producers).
	
	4. Select "Proportion" as Visualization

	5. Then leaving the default parameters in Ocelotl (time slices: 100; threshold: 0.001), click on RUN!. By disaggregating the trace until the parameter reaches a value around 0.0488, some spikes appears, which showing some heterogeneity in the behavior of the application. By further analyzing, four different kinds of spikes can be observed:
		1. The one at the beginning corresponds to the initialization phase.
		2. The ones at the end correspond to the end phase.
		3. Some spikes identified by the fact that they have more SoftIRQ events.
		4. And finally, the remaining spikes, which have more interrupt events than the others, correspond to the researched perturbations.
		
		
=========================================
Using a MegaLOG output
=========================================
	1. Generate a MegaLOG output with a query that computes the duration between two calls of 'switch_to' by the process "ts_record (1798)" (cf. query at the end of this doc).
	2. In Ocelotl, choose the output generated by MegaLOG as the trace to analyze.
	3. Select "Event distribution" in microscopic description, and then "Proportion" in Visualization, leaving for both the default settings.
	4. Set the threshold value at: 0.0001 and click on RUN!.
	5. Disaggregate until reaching a value of 0.000183, and the seven displayed perturbations correspond to the seven greatest perturbations observed in MegaLOG.
	
	
=========================================
Annex
=========================================
MegaLOG query:

SEQUENCE(a, x*, b) AS TEST_DURATION
AND a.EVENT_TYPE = '__switch_to'
AND b.EVENT_TYPE = '__switch_to'
AND a.EVENT_PRODUCER_ID = '1798 (ts_record)'
AND a.EVENT_PRODUCER_ID = b.EVENT_PRODUCER_ID
WITHIN 100000000000
SELECT a.CPU AS CPU
SELECT a.EVENT_PRODUCER_ID AS EVENT_PRODUCER_ID
SELECT a.current_date AS BEGIN_DATE
SELECT (b.current_date - a.current_date) AS PATTERN_DURATION

