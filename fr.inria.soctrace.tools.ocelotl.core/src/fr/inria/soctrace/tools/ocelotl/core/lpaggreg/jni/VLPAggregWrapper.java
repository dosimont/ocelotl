/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package fr.inria.soctrace.tools.ocelotl.core.lpaggreg.jni;

public class VLPAggregWrapper extends LPAggregWrapper {
  private long swigCPtr;

  protected VLPAggregWrapper(long cPtr, boolean cMemoryOwn) {
    super(lpaggregJNI.VLPAggregWrapper_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VLPAggregWrapper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lpaggregJNI.delete_VLPAggregWrapper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public VLPAggregWrapper() {
    this(lpaggregJNI.new_VLPAggregWrapper(), true);
  }

  public void newVector() {
    lpaggregJNI.VLPAggregWrapper_newVector(swigCPtr, this);
  }

  public void addToVector(double element) {
    lpaggregJNI.VLPAggregWrapper_addToVector__SWIG_0(swigCPtr, this, element);
  }

  public void addToVector(double element, int index) {
    lpaggregJNI.VLPAggregWrapper_addToVector__SWIG_1(swigCPtr, this, element, index);
  }

  public void computeQualities(boolean normalization) {
    lpaggregJNI.VLPAggregWrapper_computeQualities(swigCPtr, this, normalization);
  }

  public void computeParts(float parameter) {
    lpaggregJNI.VLPAggregWrapper_computeParts(swigCPtr, this, parameter);
  }

  public void computeDichotomy(float threshold) {
    lpaggregJNI.VLPAggregWrapper_computeDichotomy(swigCPtr, this, threshold);
  }

  public int getVectorNumber() {
    return lpaggregJNI.VLPAggregWrapper_getVectorNumber(swigCPtr, this);
  }

  public int getVectorSize() {
    return lpaggregJNI.VLPAggregWrapper_getVectorSize(swigCPtr, this);
  }

}
