/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package fr.inria.soctrace.tools.ocelotl.core.lpaggreg.jni;

public class LPAggregWrapper {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected LPAggregWrapper(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LPAggregWrapper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lpaggregJNI.delete_LPAggregWrapper(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void computeQualities(boolean normalization) {
    lpaggregJNI.LPAggregWrapper_computeQualities(swigCPtr, this, normalization);
  }

  public void computeParts(float parameter) {
    lpaggregJNI.LPAggregWrapper_computeParts(swigCPtr, this, parameter);
  }

  public void computeDichotomy(float threshold) {
    lpaggregJNI.LPAggregWrapper_computeDichotomy(swigCPtr, this, threshold);
  }

  public int getPart(int index) {
    return lpaggregJNI.LPAggregWrapper_getPart(swigCPtr, this, index);
  }

  public int getPartNumber() {
    return lpaggregJNI.LPAggregWrapper_getPartNumber(swigCPtr, this);
  }

  public float getParameter(int index) {
    return lpaggregJNI.LPAggregWrapper_getParameter(swigCPtr, this, index);
  }

  public int getParameterNumber() {
    return lpaggregJNI.LPAggregWrapper_getParameterNumber(swigCPtr, this);
  }

  public double getGainByIndex(int index) {
    return lpaggregJNI.LPAggregWrapper_getGainByIndex(swigCPtr, this, index);
  }

  public double getGainByParameter(float parameter) {
    return lpaggregJNI.LPAggregWrapper_getGainByParameter(swigCPtr, this, parameter);
  }

  public double getLossByIndex(int index) {
    return lpaggregJNI.LPAggregWrapper_getLossByIndex(swigCPtr, this, index);
  }

  public double getLossByParameter(float parameter) {
    return lpaggregJNI.LPAggregWrapper_getLossByParameter(swigCPtr, this, parameter);
  }

}
