/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package fr.inria.soctrace.tools.ocelotl.core.lpaggreg.jni;

public class MLPAggregWrapper extends LPAggregWrapper {
	protected static long getCPtr(final MLPAggregWrapper obj) {
		return obj == null ? 0 : obj.swigCPtr;
	}

	private long	swigCPtr;

	public MLPAggregWrapper() {
		this(lpaggregJNI.new_MLPAggregWrapper(), true);
	}

	protected MLPAggregWrapper(final long cPtr, final boolean cMemoryOwn) {
		super(lpaggregJNI.MLPAggregWrapper_SWIGUpcast(cPtr), cMemoryOwn);
		swigCPtr = cPtr;
	}

	public void addToMatrix(final double element, final int i) {
		lpaggregJNI.MLPAggregWrapper_addToMatrix__SWIG_0(swigCPtr, this, element, i);
	}

	public void addToMatrix(final double element, final int i, final int j) {
		lpaggregJNI.MLPAggregWrapper_addToMatrix__SWIG_1(swigCPtr, this, element, i, j);
	}

	public void addToVector(final double element) {
		lpaggregJNI.MLPAggregWrapper_addToVector__SWIG_0(swigCPtr, this, element);
	}

	public void addToVector(final double element, final int index) {
		lpaggregJNI.MLPAggregWrapper_addToVector__SWIG_1(swigCPtr, this, element, index);
	}

	@Override
	public void computeDichotomy(final float threshold) {
		lpaggregJNI.MLPAggregWrapper_computeDichotomy(swigCPtr, this, threshold);
	}

	@Override
	public void computeParts(final float parameter) {
		lpaggregJNI.MLPAggregWrapper_computeParts(swigCPtr, this, parameter);
	}

	@Override
	public void computeQualities(final boolean normalization) {
		lpaggregJNI.MLPAggregWrapper_computeQualities(swigCPtr, this, normalization);
	}

	@Override
	public synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				lpaggregJNI.delete_MLPAggregWrapper(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

	@Override
	protected void finalize() {
		delete();
	}

	public int getMatrixNumber() {
		return lpaggregJNI.MLPAggregWrapper_getMatrixNumber(swigCPtr, this);
	}

	public int getMatrixSize() {
		return lpaggregJNI.MLPAggregWrapper_getMatrixSize(swigCPtr, this);
	}

	public int getVectorSize() {
		return lpaggregJNI.MLPAggregWrapper_getVectorSize(swigCPtr, this);
	}

	public void newMatrix() {
		lpaggregJNI.MLPAggregWrapper_newMatrix(swigCPtr, this);
	}

	public void newVector() {
		lpaggregJNI.MLPAggregWrapper_newVector(swigCPtr, this);
	}

}
